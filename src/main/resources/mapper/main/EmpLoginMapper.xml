<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.erp.mapper.main.EmpLoginMapper">

    <select id="findByIdentityAndComCode" resultType="com.yedam.erp.vo.main.EmpLoginVO">
    SELECT
        T1.emp_id_no,
        T1.emp_pw,
        T1.login_id,
        T1.emp_no,
        T1.create_at,
        T1.is_used,
        T1.mat_no,
        T1.is_locked,
        T1.lock_until,
        T1.failed_login_att,
        T1.emp_id,
        T1.code_id,
        T1.two_step_method,
        T1.token,
        T1.emp_img,
        T1.dept_code,
        T1.emp_mobile
    FROM
        emp_login T1
    INNER JOIN
        company T2 ON T1.mat_no = T2.mat_no  -- 두 테이블을 mat_no 기준으로 연결
    WHERE
        (T1.login_id = #{identity} OR T1.emp_no = #{identity}) -- ID 또는 사원번호로 검색
    AND 
        T2.com_code = #{comCode}  -- company 테이블의 com_code로 필터링
    </select>
    
    <update id="updatePasswordByEmpIdNo">
        UPDATE
            emp_login   
        SET
            emp_pw = #{newPassword}
        WHERE
            emp_id_no = #{empIdNo}
    </update>

	<select id="findByEmpId" parameterType="String" resultType="com.yedam.erp.vo.main.EmpLoginVO">
        SELECT
            emp_id_no,
            emp_pw,
            emp_id,
            emp_no,
            create_at,
            is_used,
            mat_no,
            is_locked,
            lock_until,
            failed_login_att,
            dept_code,
            code_id,
            two_step_method,
            token,
            name
        FROM
            emp_login
        WHERE
            emp_id = #{empId}
	</select>
 
    <select id="findByEmpIdAndComCode" resultType="com.yedam.erp.vo.main.EmpLoginVO">
        SELECT
            T1.emp_id_no,
            T1.emp_pw,
            T1.emp_id,
            T1.emp_no,
            T1.create_at,
            T1.is_used,
            T1.mat_no,
            T1.is_locked,
            T1.lock_until,
            T1.failed_login_att,
            T1.dept_code,
            T1.code_id,
            T1.two_step_method,
            T1.token,
            T1.emp_mobile,
            T1.name
        FROM
            emp_login T1
        INNER JOIN
            company T2 ON T1.mat_no = T2.mat_no  WHERE
            T1.emp_id = #{empId} 
        AND 
            T2.com_code = #{comCode}      
    </select>
<resultMap id="EmpVOResultMap" type="com.yedam.erp.vo.hr.EmpVO">
    <id property="emp_id" column="EMP_ID"/> 
	    <result property="name" column="NAME"/> 
	    <result property="dept_code" column="DEPT_CODE"/>
	    <result property="email" column="EMAIL"/>
	    <result property="companyCode" column="COMPANY_CODE"/> 
	    <result property="position" column="POSITION"/>
	    <result property="dept_name" column="DEPT_NAME"/> 
    </resultMap>    
    
 <!-- 사원정보 조회 -->
<select id="findEmployeesByDept" parameterType="String" resultMap="EmpVOResultMap">
    SELECT
        EMP_ID,
        NAME,
        DEPT_CODE,
        EMAIL
    FROM
        EMP
    <where>
        <if test="deptCode != null and !deptCode.equals('')">
            DEPT_CODE = #{deptCode}
        </if>
    </where>
    ORDER BY NAME
</select>    
    
<!-- 신규 아이디 계정 생성 -->
<insert id="insertNewEmployeeLogin" parameterType="com.yedam.erp.vo.main.EmpLoginVO">
        
        <selectKey keyProperty="empIdNo" resultType="long" order="BEFORE">
            SELECT SEQ_EMP_LOGIN_ID_NO.NEXTVAL FROM DUAL
        </selectKey>

        INSERT INTO EMP_LOGIN (
            EMP_ID_NO,         
            EMP_ID,             
            EMP_PW,             
            EMP_NO,            
            MAT_NO,            
            CREATE_AT,          
            IS_USED,            
            IS_LOCKED,          
            FAILED_LOGIN_ATT,   
            MUST_CHANGE_PW 
        ) VALUES (
            #{empIdNo},
            #{empId},
            #{empPw},
            #{empNo},
            #{matNo},
            SYSDATE,
            'Y',
            'N',
            0,
            'Y'
        )
    </insert>
    <!-- 초기 비밀번호 업데이트 -->
    <update id="updatePasswordAndFlag">
        UPDATE EMP_LOGIN
        SET
            EMP_PW = #{empPw},
            MUST_CHANGE_PW = #{mustChangePw}
        WHERE
            EMP_ID = #{empId}
    </update>

  <select id="findEmployeeById" parameterType="String" resultMap="EmpVOResultMap">
    SELECT
        EMP_ID,
        NAME,
        DEPT_CODE,
        EMAIL
    FROM
        EMP
    WHERE
        EMP_ID = #{empId}
</select>
<select id="mypageInfo" resultType="com.yedam.erp.vo.hr.EmpVO">
		SELECT 
		    l.emp_id AS login_id,
		    e.emp_id AS emp_id,
		    e.name,
		    d.dept_name,
		    e.position
		FROM emp_login l
		LEFT JOIN emp e 
		    ON REPLACE(l.emp_id, 'gen-', '') = e.emp_id
		LEFT JOIN dept d 
		    ON e.dept_code = d.dept_code
		WHERE l.emp_id = #{empId}
</select>
</mapper>