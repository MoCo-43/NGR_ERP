<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 인터페이스 FQN과 100% 일치 -->
<mapper namespace="com.yedam.erp.mapper.Biz.BizMapper">

<!-- 테스트용 전체 주문서 목록 조회 -->
<select id="getAllPO" resultType="PurchaseOrderVO">
  SELECT * 
  FROM PURCHASE_ORDER
</select>

<!-- 주문서 조회 -->
<select id="selectPO" resultType="JoinPoVO" parameterType="long">
SELECT
    p.PO_START,
    c.CUS_NAME,
    p.CREATER,
    CASE
        WHEN pd_counts.cnt > 1 THEN pod.PRODUCT_NAME || ' 외 ' || (pd_counts.cnt - 1) || '건'
        ELSE pod.PRODUCT_NAME
    END AS PRODUCT_NAME,
    c.BIZ_TYPE,
    p.TOTAL_PRICE,
    p.PO_STATUS,
    p.NOTES,
    p.EX_DATE
FROM
    CUSTOMER c
LEFT JOIN
    PURCHASE_ORDER p ON c.CUS_CODE = p.CUS_CODE
LEFT JOIN
    PO_DETAIL pod ON p.PO_ID = pod.PO_ID
LEFT JOIN
    (SELECT PO_ID, COUNT(*) as cnt 
     FROM PO_DETAIL 
     GROUP BY PO_ID)pd_counts
ON
    p.PO_ID = pd_counts.PO_ID
WHERE c.COMPANY_CODE = #{companyCode} AND p.COMPANY_CODE = #{companyCode} AND pod.COMPANY_CODE = #{companyCode}
ORDER BY PO_START DESC
</select>


<!-- 주문서 등록 -->
<insert id="insertPO" parameterType="PoInsertVO">
  INSERT ALL
    INTO purchase_order (
      PO_ID, COMPANY_CODE, PO_CODE, CUS_CODE, CUS_NAME, CREATER, PO_START, EX_DATE, PO_DATE,
      TOTAL_PRICE, PO_STATUS, PAY_METHOD, NOTES, VAT_TYPE, PO_TYPE
    )
    VALUES (
      PO_ID_SEQ.NEXTVAL, #{companyCode}, fn_generate_code('PO', ''),
      #{cusCode}, #{cusName}, #{creater}, #{poStart}, #{exDate}, #{poDate},
      #{totalPrice}, '작성완료',
      #{payMethod}, #{notes}, #{vatType}, #{poType}
    )
    
    <foreach collection="poDetails" item="pod">
      INTO po_detail (
        POD_ID, PO_ID, COMPANY_CODE, PRODUCT_CODE, ORDER_QTY, UNIT_PRICE,
        DC_PRICE, SUP_AMT, VAT_AMT, PRODUCT_NAME, CREDIT_ACTIVE
      )
      VALUES (
        POD_ID_SEQ.NEXTVAL,
        PO_ID_SEQ.CURRVAL,
        #{companyCode},
        #{pod.productCode}, #{pod.orderQty}, #{pod.unitPrice},
        #{pod.dcPrice}, #{pod.supAmt}, #{pod.vatAmt}, #{pod.productName}, #{pod.creditActive}
      )
    </foreach>
  SELECT 1 FROM DUAL
</insert>


<!-- 주문서 이력 조회 -->
<select id="getPOHistory" resultType="PoHistoryVO">
SELECT po.PO_START, po.CUS_NAME, po.creater, po.EX_DATE, pd.UNIT_PRICE, pd.PRODUCT_NAME
FROM PURCHASE_ORDER po
JOIN PO_DETAIL pd ON pd.PO_ID = po.PO_ID
WHERE po.COMPANY_CODE = #{companyCode}
</select>

<!-- 품목조회 -->
<select id="getProducts" resultType="ProductCodeVO">
  SELECT PRODUCT_CODE, PRODUCT_NAME
  FROM PRODUCT
  WHERE COMPANY_CODE = #{companyCode}
</select>

<!-- 거래처 조회 -->
<select id="getCustomers" resultType="CusModalVO">
  SELECT c.CUS_CODE, c.CUS_NAME, cm.CREDIT_GRADE, cm.LEFT_PRICE
  FROM CUSTOMER c
  LEFT JOIN CREDIT_MASTER cm ON c.CUS_NO = cm.CUS_NO
  WHERE c.COMPANY_CODE = #{companyCode}
  </select>

  <!-- 출하지시서 조회 -->
  <select id="selectDo" resultType="DeliveryOrderVO" parameterType="Long">
SELECT
    d.DO_CODE,
    d.DO_CREATED,
    c.CUS_NAME AS CUS_CODE,
    CASE
        WHEN COUNT(p.PRODUCT_NAME) > 1
            THEN MIN(p.PRODUCT_NAME) || ' 외 ' || (COUNT(p.PRODUCT_NAME) - 1) || '건'
        ELSE MIN(p.PRODUCT_NAME)
    END AS PRODUCT_CODE,
    d.TOTAL_QTY,
    d.EX_DATE,
    d.DO_STATUS

FROM DELIVERY_ORDER d
JOIN CUSTOMER c
  ON d.CUS_CODE = c.CUS_CODE
JOIN DO_DETAIL dd
  ON d.DO_NO = dd.DO_NO
JOIN PRODUCT p
  ON dd.PRODUCT_CODE = p.PRODUCT_CODE

WHERE d.COMPANY_CODE = #{companyCode}

GROUP BY
    d.DO_CODE, d.DO_CREATED, c.CUS_CODE, c.CUS_NAME,
    d.TOTAL_QTY, d.EX_DATE, d.DO_STATUS
ORDER BY d.DO_CREATED DESC
</select>

<!-- 출하지시서 등록 -->
<insert id="insertDO" parameterType="DoInsertVO">
  INSERT ALL
    INTO DELIVERY_ORDER
      (DO_NO, CUS_CODE, PO_ID, DO_CODE, EMP_NO, NAME, DO_CREATED,
       TOTAL_QTY, DO_STATUS, NOTES, COMPANY_CODE, EX_DATE, ADDR, ZIP_CODE)
    VALUES
      (DO_NO_SEQ.NEXTVAL, #{cusCode}, 11, fn_generate_code('DO', ''),
       #{empNo}, #{name}, #{doCreated},
       #{totalQty}, #{doStatus}, #{notes}, #{companyCode}, #{exDate},
       #{addr}, #{zipCode})

    <foreach collection="dodetails" item="dod">
      INTO DO_DETAIL
        (DOD_NO, DO_NO, PRODUCT_CODE, QTY, UNIT_PRICE, SUP_AMT, VAT_AMT, DC_PRICE, COMPANY_CODE)
      VALUES
        (DOD_NO_SEQ.NEXTVAL, DO_NO_SEQ.CURRVAL, #{dod.productCode}, #{dod.qty},
         #{dod.unitPrice}, #{dod.supAmt}, #{dod.vatAmt}, #{dod.dcPrice}, #{dod.companyCode})
    </foreach>
  SELECT 1 FROM DUAL
</insert>

<!-- 거래처 조회-->
<select id="selectCustomers" resultType="java.util.List" parameterType="String">
  SELECT CUS_CODE, CUS_NAME, CEO_NAME, TEL, ADDR, ACTIVE_STATUS, GBN
  FROM CUSTOMER
  WHERE COMPANY_CODE = #{companyCode}
</select>


<!-- 거래처 관리 조회 페이지 -->
<select id="getCustomerManagement" resultType="CustomerVO" parameterType="Long">
  SELECT CUS_CODE, CUS_NAME, CEO_NAME, TEL, ADDR, ACTIVE_STATUS, GBN
  FROM CUSTOMER
  WHERE COMPANY_CODE = #{companyCode}
</select>

<!-- 거래처 등록 -->
<insert id="insertCustomer" parameterType="CustomerVO">
  INSERT INTO CUSTOMER (CUS_NO, CUS_CODE, EMP_NO, CEMP_NAME, EMP_NAME, CUS_NAME, BIZ_NO, CEO_NAME, BIZ_TYPE, BIZ_CATEGORY, TEL, EMAIL, ADDR, ZIP_CODE, ACTIVE_STATUS, GBN, BANK_NAME, BANK_ACCOUNT, COMPANY_CODE)
  VALUES (CUS_NO_SEQ.NEXTVAL, FN_CUS_CODE(''), #{empNo}, #{cempName}, #{empName}, #{cusName}, #{bizNo}, #{ceoName}, #{bizType}, #{bizCategory}, #{tel}, #{email}, #{addr}, #{zipCode}, #{activeStatus}, #{gbn}, #{bankName}, #{bankAccount}, #{companyCode})
</insert>

<!-- 거래처 단건 수정 -->
  <update id="updateCustomerByCode" parameterType="CustomerVO">
    UPDATE CUSTOMER
    <set>
      <if test="cusName != null">        CUS_NAME = #{cusName},</if>
      <if test="ceoName != null">        CEO_NAME = #{ceoName},</if>
      <if test="tel != null">            TEL = #{tel},</if>
      <if test="addr != null">           ADDR = #{addr},</if>
      <if test="zipCode != null">        ZIP_CODE = #{zipCode},</if>

      <if test="bizNo != null">          BIZ_NO = #{bizNo},</if>
      <if test="bizType != null">        BIZ_TYPE = #{bizType},</if>
      <if test="bizCategory != null">    BIZ_CATEGORY = #{bizCategory},</if>

      <if test="email != null">          EMAIL = #{email},</if>
      <if test="cempName != null">       CEMP_NAME = #{cempName},</if>

      <if test="activeStatus != null">   ACTIVE_STATUS = #{activeStatus},</if>
    </set>
    WHERE CUS_CODE = #{cusCode}
      AND COMPANY_CODE = #{companyCode}
  </update>

<!-- 여신관리 조회 -->
<select id="selectCrdMaster" resultType="java.util.List" parameterType="Long">
SELECT cm.CUS_CODE, cst.CUS_NAME, cm.DUE_DATE, cm.CREDIT_LIMIT, cm.CREDIT_GRADE, cm.START_DATE, cm.EXPIRE_DATE, cm.LEFT_PRICE, cm.ACTIVE_STATUS
FROM CREDIT_MASTER cm
JOIN CUSTOMER cst ON cm.CUS_CODE = cst.CUS_CODE
WHERE cm.COMPANY_CODE = '#{companyCode} 
</select>
</mapper>
