<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.erp.mapper.stock.StockMapper">
<insert id="insertProduct" parameterType="ProductVO">
INSERT INTO product(
		PRODUCT_CODE
		,PRODUCT_NAME
		,SPECIFICATION
		,EMP_NAME
		,PRODUCT_IMAGE
		,PURCHASE_PRICE
		,SALES_PRICE
		,NOTE
		,INSERT_DATE
)
VALUES(CONCAT('P',LPAD(seq_product.nextval,5,'0')),
       #{productName},
       #{specification},
       #{empName},
       #{productImageName},
       #{purchasePrice},
       #{salesPrice},
       #{note},
       #{insertDate}
)

</insert>

<select id="customerAll" resultType="PartnerVO">
SELECT 
       emp_name, 
       cus_name,
       cus_code,
       biz_no,
       ceo_name, 
       biz_type ,
       biz_category,
       addr 
FROM customer
WHERE gbn = '구매처'
</select>

<select id="productAll" resultType="ProductVO">
SELECT PRODUCT_CODE
       ,PRODUCT_NAME
       ,SPECIFICATION
FROM PRODUCT


</select>

<insert id="insertOrderPlan" parameterType="OrderPlanVO">
<selectKey keyProperty="xpCode" resultType="string" order="BEFORE">
        SELECT CONCAT('OP', SEQ_EXPLAIN.nextval) FROM dual
</selectKey>
INSERT INTO EXPLAIN(
         XP_CODE
         ,EMP_ID
         ,INS_DATE
         ,VAT_TYPE
)
VALUES (#{xpCode}, #{empId}, #{insDate}, #{taxType})


</insert>
<insert id="insertOrderPlanDetail" parameterType="OrderPlanDetailVO">
INSERT INTO EXPLAIN_DETAIL(
         XD_NO
        ,PRODUCT_CODE
        ,PRODUCT_NAME
        ,SPECIFICATION
        ,BUSINESS_PARTNER
        ,BUSINESS_CODE
        ,AMOUNT
        ,PURCHASE_PRICE
        ,SUP_AMT
        ,VAT_AMT
        ,XP_CODE
)
VALUES (SEQ_EXPLAIN_DETAIL.nextval ,
        #{productCode}, 
        #{productName},
        #{specification}, 
        #{businessPartner},
        #{businessCode},
        #{amount},
        #{purchasePrice},
        #{supAmt},
        #{vatAmt},
        #{xpCode}
)


</insert>
<!-- 발주 계획 조회 -->
<select id="selectOrderPlans" resultMap="orderPlanResultMap">
SELECT 
    m.xp_code as "xp_code",
    min(d.business_partner) as "business_partner",
    min(d.business_code) as "business_code",  
    m.emp_id as "emp_id",
    m.vat_type as "vat_type",
    m.ins_date as "ins_date",
    case
        when count(d.xd_no) > 1 
            then min(d.product_name) || ' 외 ' || (count(d.xd_no) - 1) || '건' 
        else min(d.product_name) 
    end as "product_name",
    sum(d.amount) as "amount",
    sum(d.sup_amt) as "sup_amt" 
FROM explain m 
JOIN explain_detail d 
    ON m.xp_code = d.xp_code 
GROUP BY 
    m.xp_code, 
    m.emp_id, 
    m.vat_type,
    m.ins_date
</select>

<!-- ResultMap -->
<resultMap id="orderPlanResultMap" type="OrderPlanVO">
    <id property="xpCode" column="xp_code"/>
    <result property="empId" column="emp_id"/>
    <result property="insDate" column="ins_date"/>
    <result property="taxType" column="vat_type"/>
    
    <!-- 디테일 매핑 -->
    <collection property="details" ofType="OrderPlanDetailVO" 
        select="selectOrderPlanDetailsByXpCode" column="xp_code"/>
</resultMap>

<!-- 발주 계획 상세 조회 -->
<select id="selectOrderPlanDetailsByXpCode" parameterType="string" resultType="OrderPlanDetailVO">
SELECT 
    xd_no       as xd_no,
    product_code as product_code,
    product_name as product_name,
    specification as specification,
    business_partner as business_partner,
    business_code as business_code,
    amount as amount,
    purchase_price as purchase_price,
    sup_amt as sup_amt,
    vat_amt as vat_amt
FROM explain_detail
WHERE xp_code = #{xpCode}
</select>



</mapper>